apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: kube-janitor
    version: v20.10.0
    role: ctf-system
  name: kube-janitor
  namespace: ctf-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      application: kube-janitor
  template:
    metadata:
      labels:
        application: kube-janitor
        version: v20.10.0
    spec:
      serviceAccountName: kube-janitor
      containers:
      - name: janitor
        # see https://github.com/hjacobs/kube-janitor/releases
        image: hjacobs/kube-janitor:20.10.0
        args:
          - --interval=120
          - --rules-file=/config/rules.yaml
        resources:
          {{ limits.kube-janitor }}
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
          - name: config-volume
            mountPath: /config
      volumes:
      - name: config-volume
        configMap:
          name: kube-janitor
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-janitor
  namespace: ctf-admin
data:
  rules.yaml: |
    rules:
    - id: ctf-challenges-isolated-cleanup
      # clean up all isolated resources after this time, even if the user tries to extend it further
      resources:
      - "*"
      jmespath: "metadata.namespace == 'ctf-challenges-isolated'"
      ttl: 8h
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-janitor
  namespace: ctf-admin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-janitor
  namespace: ctf-admin
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - get
  - watch
  - list
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-janitor
  namespace: ctf-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-janitor
subjects:
- kind: ServiceAccount
  name: kube-janitor
  namespace: ctf-admin